node {
  def ROOTDIR = pwd()
  def hostjenkins = System.getenv("HOST_JENKINS")
  def hostcontent = hostjenkins.replace('jenkins','') + "contentRepo/"
  print "hostcontent:" + hostcontent
  def values = ROOTDIR.split('/')
  hostjenkins = hostjenkins + '/workspace/' + values[values.length - 1]
  print "hostjenkins:" + hostjenkins

  parameters {[
    string(name: 'method', defaultValue: ''),
    string(name: 'requestid', defaultValue: ''),
    string(name: 'contentrepo', defaultvalue: '/opt/hfrd/contentRepo'),
    string(name: 'uid', defaultvalue: '')
  ]}

  def scmUrl = scm.getUserRemoteConfigs()[0].getUrl()

  def uid = params.uid
  def requestid = params.requestid
  def action = params.method
  def imagename = 'bxbox_alpine'
  def scriptname = ' bash -c "cd /opt/src/scripts/ibpv2;python network.py" '

  println 'Received parameters are method:' + params.method + ' requestid:' + requestid + ' scriptname:' + scriptname

  def handler = ''
  def hasImage = sh(returnStdout: true,
    script: 'sudo docker images -q ' + imagename + ':latest 2> /dev/null')

  sh """
     rm -rf hfrd backend
     rm -rf workdir
     git clone -b master --single-branch ${scmUrl}
     cp -rf hfrd/backend $ROOTDIR
     mkdir -p workdir/results
     cp -rf hfrd/backend/jenkins/pipelines $ROOTDIR/workdir/src
  """

  if (hasImage == '') {
    sh "chmod +x backend/jenkins/pipelines/scripts/icp/*"
    handler = load("backend/jenkins/pipelines/common/utils.groovy")
    handler.prepareImage(imagename)
  }

  sh """
      sudo docker run --rm -v ${hostjenkins}/workdir:/opt/fabrictest -v ${hostcontent}:/opt/hfrd/contentRepo/ \
      -e USER_ID=${uid} -e REQ_ID=${requestid} -e ACTION=${action} \
      --network ibp_ocp  \
      --dns=172.3.27.2 \
      ${imagename} ${scriptname}
  """

}
