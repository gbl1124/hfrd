---
kind: ConfigMap
apiVersion: v1
metadata:
  name: hfrdsettings
data:
  hfrdconfig: |
    {
      "jenkins": {
        "baseUrl": "http://admin:admin@hfrdjenkins:8080",
        "crumbUrl": "/crumbIssuer/api/json",
        "jobUrl": "/job/{JobName}/api/xml?tree=builds[id,result,queueId]&xpath=\/\/build[queueId={QueueId}]",
        "jobStatusUrl": "/job/{JobName}/{JobId}/artifact/workdir/results/jobStatus.json",
        "serviceGetByServiceId": "job/{JobName}/{JobId}/artifact/workdir/results/package.tar",
        "buildUrl": "/job/{JobName}/buildWithParameters"
      },
      "log": {
        "level": "debug"
      },
      "auth": {
        "enabled": false,
        "type": "jwt"
      },
      "couchUrl": "http://localhost:5984",
      "allowOrigins": [{{- range $i, $item := .Values.nginx.allowOrigins }}{{ $item | quote }}{{if not $i}},{{end}}{{- end }}],
      "contentRepo": "/opt/hfrd/contentRepo",
      "apacheBaseUrl": "http://hfrdapache:9696"
    }

  htpasswd: |
    {{ .Values.htpasswd }}
  nginxconf: |
    server {
      listen 80 default_server;
      listen [::]:80 default_server;
      listen 443 ssl;

      ssl_certificate /etc/nginx/ssl/tls.crt;
      ssl_certificate_key /etc/nginx/ssl/tls.key;
      auth_basic "Restricted Content";
      auth_basic_user_file /etc/nginx/auth/htpasswd;

      location /hfrd/ {
        proxy_pass http://hfrdserver:8080/;
        add_header Content-Type text/html;
        sub_filter_types "*";
        sub_filter_once off;
        sub_filter 'http://hfrdserver:8080' 'https://$host:30443/hfrd';
        sub_filter 'http://hfrdapache:9696' 'https://$host:30443/apache';
        sub_filter 'http://hfrdjenkins:8080' 'https://$host:30443';
        sub_filter 'href="/' 'href="/hfrd/';
        sub_filter 'src="/' 'src="/hfrd/';
        sub_filter '"/v1/' '"/hfrd/v1/';
        sub_filter "'/v1/" "'/hfrd/v1/";
        sub_filter '"/static/' '"/hfrd/static/';
      }

      location /apache/ {
        proxy_pass http://hfrdapache:8080/;
        proxy_redirect 'http://hfrdapache:8080/' 'https://$host:30443/apache/';
        sub_filter_types "*";
        sub_filter_once off;
        sub_filter 'http://hfrdapache:9696/' 'https://$host:30443/apache/';
      }

      location / {
        proxy_pass http://hfrdjenkins:8080/;
        proxy_redirect 'http://hfrdjenkins:8080/' 'https://$host:30443/';
      }
    }

  jenkinsapproval: |
    <?xml version='1.1' encoding='UTF-8'?>
    <scriptApproval plugin="script-security@1.46">
      <approvedScriptHashes/>
      <approvedSignatures>
        <string>method hudson.plugins.git.GitSCM getUserRemoteConfigs</string>
        <string>method hudson.plugins.git.UserRemoteConfig getUrl</string>
        <string>method groovy.text.Template make java.util.Map</string>
        <string>method groovy.text.TemplateEngine createTemplate java.lang.String</string>
        <string>method hudson.plugins.git.GitSCM getUserRemoteConfigs</string>
        <string>method hudson.plugins.git.UserRemoteConfig getUrl</string>
        <string>new groovy.text.GStringTemplateEngine</string>
        <string>staticMethod java.lang.System getenv java.lang.String</string>
        <string>method org.apache.commons.collections.KeyValue getValue</string>
      </approvedSignatures>
      <aclApprovedSignatures/>
      <approvedClasspathEntries/>
      <pendingScripts/>
      <pendingSignatures/>
      <pendingClasspathEntries/>
    </scriptApproval>

  jenkinsconfig: |
    <?xml version='1.1' encoding='UTF-8'?>
    <hudson>
      <disabledAdministrativeMonitors/>
      <version>2.138.2</version>
      <installStateName>RUNNING</installStateName>
      <numExecutors>30</numExecutors>
      <mode>NORMAL</mode>
      <useSecurity>false</useSecurity>
      <authorizationStrategy class="hudson.security.AuthorizationStrategy$Unsecured"/>
      <securityRealm class="hudson.security.SecurityRealm$None"/>
      <disableRememberMe>false</disableRememberMe>
      <projectNamingStrategy class="jenkins.model.ProjectNamingStrategy$DefaultProjectNamingStrategy"/>
      <workspaceDir>${JENKINS_HOME}/workspace/${ITEM_FULL_NAME}</workspaceDir>
      <buildsDir>${ITEM_ROOTDIR}/builds</buildsDir>
      <jdks/>
      <viewsTabBar class="hudson.views.DefaultViewsTabBar"/>
      <myViewsTabBar class="hudson.views.DefaultMyViewsTabBar"/>
      <clouds/>
      <scmCheckoutRetryCount>0</scmCheckoutRetryCount>
      <views>
        <hudson.model.AllView>
          <owner class="hudson" reference="../../.."/>
          <name>all</name>
          <filterExecutors>false</filterExecutors>
          <filterQueue>false</filterQueue>
          <properties class="hudson.model.View$PropertyList"/>
        </hudson.model.AllView>
      </views>
      <primaryView>all</primaryView>
      <slaveAgentPort>50000</slaveAgentPort>
      <label></label>
      <nodeProperties/>
      <globalNodeProperties/>
    </hudson>


---
apiVersion: v1
kind: Secret
metadata:
  name: tlscerts
type: Opaque
data:
  tls.crt: {{ .Values.tls.crt }}
  tls.key: {{ .Values.tls.key }}
